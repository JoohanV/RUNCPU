<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>1</version>
  <attributes>
    <entry>
      <string>Description</string>
      <string>The InstructionDecoder component, which serves as a hub to control many of the signals to other components. It implements both the fetch operation, and execution of machine code (including decoding).</string>
    </entry>
    <entry>
      <string>Width</string>
      <int>12</int>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>The instruction machine code input. If the CPU is in the fetch phase and a rising clock signal occurs, this machine code is stored in the internal instruction register (IR), so that it can be decoded and executed.</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>Instruction</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="-20" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>Instruction condition output, which contains the condition under which the instruction should be executed.</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>Condition</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="1620" y="-180"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Fetch</string>
        </entry>
      </elementAttributes>
      <pos x="-20" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Execute</string>
        </entry>
      </elementAttributes>
      <pos x="-20" y="200"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>32</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>4,28</string>
        </entry>
      </elementAttributes>
      <pos x="1440" y="-180"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Halt</string>
        </entry>
      </elementAttributes>
      <pos x="1840" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>AllBits1.dig</elementName>
      <elementAttributes/>
      <pos x="1760" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>Destination register output, which determines the register that should store the result of a data operation. A data operation is either an ALU computation, or a read from an external device, such as RAM.</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>Reg_dest</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="2060" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>B register output, which determines the register to be used for the second operand.</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>Reg_B</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="2060" y="-40"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>A register output, which determines the register to be used for the first operand.</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>Reg_A</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="2060" y="-80"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>Opcode output, which determines the operation the ALU should perform.</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>Opcode</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="2060" y="40"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>nRE</string>
        </entry>
      </elementAttributes>
      <pos x="2060" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>nWE</string>
        </entry>
      </elementAttributes>
      <pos x="2060" y="200"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Constant</string>
        </entry>
      </elementAttributes>
      <pos x="2060" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>SetFlags</string>
        </entry>
      </elementAttributes>
      <pos x="2060" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>UseConstant</string>
        </entry>
      </elementAttributes>
      <pos x="2060" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>InstructionSplitter.dig</elementName>
      <elementAttributes/>
      <pos x="340" y="-100"/>
    </visualElement>
    <visualElement>
      <elementName>InstructionLOADHI.dig</elementName>
      <elementAttributes/>
      <pos x="340" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>InstructionPOP.dig</elementName>
      <elementAttributes/>
      <pos x="340" y="180"/>
    </visualElement>
    <visualElement>
      <elementName>InstructionPUSH.dig</elementName>
      <elementAttributes/>
      <pos x="340" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>InstructionWRITE.dig</elementName>
      <elementAttributes/>
      <pos x="340" y="300"/>
    </visualElement>
    <visualElement>
      <elementName>InstructionREAD.dig</elementName>
      <elementAttributes/>
      <pos x="340" y="400"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="300" y="240"/>
      <p2 x="340" y="240"/>
    </wire>
    <wire>
      <p1 x="300" y="400"/>
      <p2 x="340" y="400"/>
    </wire>
    <wire>
      <p1 x="20" y="-180"/>
      <p2 x="300" y="-180"/>
    </wire>
    <wire>
      <p1 x="1460" y="-180"/>
      <p2 x="1620" y="-180"/>
    </wire>
    <wire>
      <p1 x="300" y="-180"/>
      <p2 x="1440" y="-180"/>
    </wire>
    <wire>
      <p1 x="300" y="-100"/>
      <p2 x="340" y="-100"/>
    </wire>
    <wire>
      <p1 x="300" y="100"/>
      <p2 x="340" y="100"/>
    </wire>
    <wire>
      <p1 x="300" y="180"/>
      <p2 x="340" y="180"/>
    </wire>
    <wire>
      <p1 x="-20" y="120"/>
      <p2 x="20" y="120"/>
    </wire>
    <wire>
      <p1 x="1820" y="120"/>
      <p2 x="1840" y="120"/>
    </wire>
    <wire>
      <p1 x="1480" y="120"/>
      <p2 x="1760" y="120"/>
    </wire>
    <wire>
      <p1 x="300" y="300"/>
      <p2 x="340" y="300"/>
    </wire>
    <wire>
      <p1 x="1460" y="-160"/>
      <p2 x="1480" y="-160"/>
    </wire>
    <wire>
      <p1 x="20" y="-180"/>
      <p2 x="20" y="120"/>
    </wire>
    <wire>
      <p1 x="1480" y="-160"/>
      <p2 x="1480" y="120"/>
    </wire>
    <wire>
      <p1 x="300" y="-180"/>
      <p2 x="300" y="-100"/>
    </wire>
    <wire>
      <p1 x="300" y="300"/>
      <p2 x="300" y="400"/>
    </wire>
    <wire>
      <p1 x="300" y="240"/>
      <p2 x="300" y="300"/>
    </wire>
    <wire>
      <p1 x="300" y="180"/>
      <p2 x="300" y="240"/>
    </wire>
    <wire>
      <p1 x="300" y="-100"/>
      <p2 x="300" y="100"/>
    </wire>
    <wire>
      <p1 x="300" y="100"/>
      <p2 x="300" y="180"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>